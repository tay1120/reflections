When would you want to create a remote repository rather than keeping all your work local?

You would want to create a remote repository rather than keeping all your work local when working on large projects that you will be sharing with other people or working from multiple computers.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You should always pull changes manually as Git does not automatically update the changes made in Git Hub and they should always match with any changes made. This way you have more control and organization within your files and all of the latest updates within both systems.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are copying repositories from one GitHub account to another. Clones are copying repositories from GitHub to local or from local to local. Branches are labels made for different commits when making multiple versions of files.

What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit of having a copy of the last known state of the remote stored locally so that if you are offline for a period of time, you have a copy of your changes saved to access at a later time.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

You can collaborate without using Git or GitHub by using another collaboration tool, a shared file, or a sharing tool such as Dropbox. It would be easier not having to create extra branches or push/pull unecessary files. It would be harder as you would have to manually review files for changes and determine how you should manually merge the files.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You would want to make changes in a separate branch rather than directly in a master to prevent permanently changing original version. This would make it harder to go back and view or make changes to the original copy or undo the changes made to the master branch. If multiple users are collaborating on the project, this could have negative impact on the other users' files and changes. Making changes to the master ensure that all files steming from this branch include the changes made within the master branch.